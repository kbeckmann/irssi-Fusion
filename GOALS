This is a list of basic goals for irssiFusion, and is still a work in progress.


==irssi Integration==
Functional piece that leaves the entire functionality of irssi available to the server application
	- Simply forward all activity to the server application for its own management. Keep irssi minimally affected by this application.

==Server Application==
Application that maintains incoming activity from irssi, logs, stores, and also maintains mirrored state of android device. This should also pass activity from the android application to irssi.
	- Potentially manage file transfers from android device through dcc sends on irssi.

==Main Service==
Long-term service to send/recieve updates to the server
	- this should be a separate process ":remote" - open functionality to other apps that want to use this service
	- this service is intended to be lightweight and do as little as possible

==Content Provider==
this may or may not happen
 - Make this an open system for other clients to use?
 - CPs provide the ability to update ListAdapters without using broadcast receivers from the Service.

==Android UI Application==
 - Immitate Yaaic UI - https://github.com/pocmo/Yaaic/
 - Add themeing functionality if it doesn't exist yet
 - Provide quick name-completion, quick privmessaging, quick whois information, etc..
 - Provide a method to add nicks to contact information, utilize this information, or simply add a "msg this person on IRC" option within the contact options menu. (Maybe) - maybe only if they are online?

==Android Notifications==
  - Filter-based notification system 
     - IE: Pubnotice from <user3> on #channel2 
          - whitelist users for all channels, etc..
  - Notification for irssi connection failure/recconnect/etc (not on android but the actual irssi session)
  - Notifications of pending dcc file transfers





TAMUnet #android Convo:
	well really i want it to maintain a connection and reconnect when necessary and there is signal. I did find the network state stuff
	17:34 <   mokomull> | pltmnky: You could potentially use C2DM to get Android to wake your app up when you need to re-connect, instead of maintaining a constant connection or polling something.
	20:30 <   mokomull> | pltmnky: I'm not sure what you need to do on the server end... if your users would each need to set up a c2dm key (e.g. so irssi can signal to c2dm) then it might be cumbersome/impossible
	20:43 <     pltmnky> | I'll probably just make a standard service then
	21:25 <    mokomull> | The Android system will force-stop a service only when memory is low and it must recover system resources for the activity that has user focus. If the service is bound to an activity that has user focus, then it's less likely to be killed, and if the service is declared to run in the foreground (discussed later), then it will almost never be killed.
	21:29 <    mokomull> | Ah.  Most things leave an "ongoing" notification, so I'd notice an icon missing.
	21:29 <     pltmnky> | but I do like having notices immeadiately too
	21:30 <     pltmnky> | ill prob just make that an option then
	21:33 <    mokomull> | "A process that is running a service that has been started with the startService() method and does not fall into either of the two higher categories. Although service processes are not directly tied to anything the user sees, they are generally doing things that the user cares about (such as playing music in the background or downloading data on the network), so the system keeps them running unless there's not enough memory to retain them along with all 
	21:33 <    mokomull> | From http://developer.android.com/guide/topics/fundamentals/processes-and-threads.html
	21:36 <    mokomull> | http://developer.android.com/reference/android/app/Service.html#startForeground(int, android.app.Notification) Aha, explains why things like the "Ongoing" notification.
	21:38 <    mokomull> | AHA! If we want to make this service run in a remote process (instead of the standard one for its .apk), we can use android:process in its manifest tag to specify one:
	21:38 <    mokomull> | <service android:name=".app.MessengerService" android:process=":remote" />
	21:40 <    mokomull> | Message / Handler?  or aidl?
	21:40 <    mokomull> | The latter, yes; the former, no.
	21:40 <    mokomull> | Message / Handler is inter-thread, not inter-process.
	21:42 <    mokomull> | Look at the "Remote Messenger Service" sample at http://developer.android.com/reference/android/app/Service.html
	21:43 <    mokomull> | Ah, okay, it uses a special thing called "Messenger" which is itself an AIDL interface to wrap up messages between processes.
	21:43 <    mokomull> | My vote: your API and code will probably look cleaner if you use AIDL yourself
	21:45 <    mokomull> | Our service was just a thread in the same process ... you may or may not want that.
	21:46 <    mokomull> | You probably do, really, unless other apps are going to use your service.  In which case, Handler/Message are what you'll want to use.

21:55 <    mokomull> | So what are you doing on the irssi side?
21:55 <     pltmnky> | there is a perl script i wrote that communicates with the server script
21:55 <     pltmnky> | just over unix sockets
21:55 <    mokomull> | Server script?
21:55 <     pltmnky> | i didnt feel like tying down irssi
21:56 <     pltmnky> | so this perl script simply listens for direct calls to send
21:56 <     pltmnky> | and forwards everything to the server as well
21:56 <    mokomull> | What operations do you support over the server connection?
21:56 <     pltmnky> | elaborate
21:57 <    mokomull> | Like ... what can the server do to irssi?
21:57 <    mokomull> | Read existing windows?
21:57 <     pltmnky> | basically anything the android app tells it to
21:57 <     pltmnky> | yes
21:57 <    mokomull> | Join new channels?
21:57 <     pltmnky> | yes
21:57 <     pltmnky> | even technically dcc send
21:57 <     pltmnky> | but that will require more work for the android
21:57 <     pltmnky> | everything is available
21:57 <    mokomull> | [I'm just curious] how the hell do you manage to read the contents of a window?
21:58 <     pltmnky> | quite easily actually
21:58 <     pltmnky> | i dont actually read the windows
21:58 <     pltmnky> | it listens for new messages
21:58 <     pltmnky> | so technically anything before, i have no idea what happened
21:58 <    mokomull> | Ah, so just like using the proxy stuff that ships with irssi.
21:58 <     pltmnky> | the server sorts and keeps its own temporary storage and tracks for the android
21:58 <     pltmnky> | right
21:59 <    mokomull> | So what do you do that I can't get by configuring up irssi proxy and some SSH tunnels?
22:00 <     pltmnky> | i was going for a shitty connection problem :P
22:00 <     pltmnky> | and not needing ssh overhead
22:00 <    mokomull> | SSH overhead is minimal, especially if it's doing compression on the stream.  At least from a bandwidth standpoint.
22:01 <     pltmnky> | and something that actually looks decent on android and has full functionality
22:01 <    mokomull> | You used Yaaic yet?
22:03 <     pltmnky> | oh, the interface is nice, but it seems like a client run from teh phone
22:03 <     pltmnky> | not what i want
22:05 <    mokomull> | It is, but I pointed that at an SSH tunnel to an irssi proxy, and I got pretty much exactly what you want.
22:05 <     pltmnky> | hm, i wonder though do you still have full functionality? from teh phone
22:06 <     pltmnky> | like could you dcc send an item from your phone through all that to some random person
22:06 <    mokomull> | No, probably not.
22:07 <     pltmnky> | there is my justification if you really require a 'valid' one ;P lol
22:07 <     pltmnky> | i want total control from the android over my irssi session on my server
22:08 <    mokomull> | I'm not looking for justification, actually... I'm just trying to get a feel for what the fuck you want.
22:10 <     pltmnky> | well i want basically the Yaaic feel, but i want it native to the android, and seamless integration with the full functionality of irssi
22:10 <    mokomull> | "native to the android", isn't that yaaic already?
22:11 <     pltmnky> | technically yes
22:11 <     pltmnky> | we could porbably just use their ui completely
22:11 <    mokomull> | I'd love that.
22:11 <    mokomull> | At least their graphics ... I may want to refactor the code.
22:11 <    mokomull> | But I hate UI development :)
22:11 <     pltmnky> | me too
22:11 <     pltmnky> | :P
22:12 <     pltmnky> | if at all possible i would like to have it customizable too, like irssi themes (dunno if Yaaic already has that)
22:13 <    mokomull> | I don't think it does, but it's GPL'ed... we can certainly add that.
22:13 <     pltmnky> | and to add effects, personally i would enjoy a set of notification filters, ie if someone pubnotices me from say #channel3 i get a nice little notification
22:14 <    mokomull> | That would be kind of nice, actually.
22:14 <     pltmnky> | i do that now with another irssi perl script and gmail sms forwarding
22:15 <     pltmnky> | but it would be nice to be really from my phone not an sms that i have to open my messaging app to view
22:16 <    mokomull> | Okay, now that I have a clue what the hell you want to do ... you should probably write that up in a "GOALS" file or something
